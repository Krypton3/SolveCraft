//lightoj 1082
#include<bits/stdc++.h>
using namespace std;
#define MAX 100005
int arr[MAX];
int tree[3*MAX];
void MakeTree(int node,int b,int e)
{
    if(b==e){
        tree[node]=arr[b];
        return;
    }
    int left=node*2;
    int right=node*2+1;
    int mid=(b+e)/2;
    MakeTree(left,b,mid);
    MakeTree(right,mid+1,e);
    tree[node]=min(tree[left],tree[right]);
}
int query(int node,int b,int e,int i,int j)
{
    if(i>e || j<b){
        return MAX;
    }
    if(b>=i && e<=j){
        return tree[node];
    }
    int left=node*2;
    int right=node*2+1;
    int mid=(b+e)/2;
    int p1=query(left,b,mid,i,j);
    int p2=query(right,mid+1,e,i,j);
    return min(p1,p2);
}
int main()
{
    int test;
    scanf("%d",&test);
    for(int p=1;p<=test;p++){
        int n,q;
        scanf("%d %d",&n,&q);
        for(int i=1;i<=n;i++){
            scanf("%d",&arr[i]);
        }
        MakeTree(1,1,n);
        printf("Case %d:\n",p);
        for(int i=1;i<=q;i++){
            int a,b;
            scanf("%d %d",&a,&b);
            printf("%d\n",query(1,1,n,a,b));
        }
    }
    return 0;
}
